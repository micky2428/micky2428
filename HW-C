一、Rock老師在學期末打算相加學生的期中考、期末考分數做為學期總成績。期中考、期末考滿分各是50分。Rock老師有上千位學生，不太可能每個人一一計算，請你寫出一個程式，替Rock老師達成這項任務。
輸入說明:輸入資料一開始為一個整數n，代表接下來有n位學生。每位學生有 2 項整數，代表期中考、期末考分數。

#include <stdio.h>
 
int main() {
  int n;
  scanf("%d", &n);
  int a[n];
  int b[n];
  int final[n];
 
 
  for(int i = 0; i < n; ++i) {
     scanf("%d %d", &a[i], &b[i]);
  }
 
  for(int i = 0; i < n; ++i) {     //refine-跟上一段合併
  	final[i] = a[i]+ b[i];
  	   printf("%d\n", final[i]);
  }
  return 0;
}

二、寫一個程式計算給定日期為星期幾。輸入會先告訴程式某年的 1 月 1 號為星期幾，例如範例中 2012 年的 1 月 1 號為星期日。接著程式會收到一些日期，並要計算出給定日期為星期幾，例如範例中程式將會收到 11 月 13 號，並計算出該日期為星期二。
輸入格式
第一行包含一個西元年以及該年的一月一日為星期幾，如範例中 2012 0。注意，0 代表星期日，1 代表星期一，以此類推。第二行會告訴程式接下來將有 n 組日期需要計算。n 的範圍為 1 至 10。接下來的 n 行，每一行將會有一組需要計算的日期(月、日)，如範例中的 11 月 13 號。若輸入的「月」有誤請輸出 -1；若輸入的「日」有誤請輸出 -2。
輸出格式
共會輸出 n 個數字。我們用 0 代表星期日，1 代表星期一，以此類推。若輸入的「月」有誤請輸出 -1；若輸入的 「月」無誤但「日」有誤請輸出 -2。(數字間留一個空白)

以下5題錯4題
#include <stdio.h>

int main() 
{
  int year, week;
  int n;
  scanf("%d %d", &year, &week);
  scanf("%d", &n);
  int i = 0;
  for (i; i < n; i++){
   int output = 0;
   int month , date ;
   scanf("%d %d", &month, &date );
   switch ( month ) {
   case 1: case 3: case 5: case 7: case 8:
   case 10: case 12:    
    if ((date > 31) || (date <= 0))
     output = -2;
    else
     output = ((date+2*month+3*(month+1)/5+year+year/4-year/100+year/400)%7)+1;
    break;
   case 4: case 6: case 9: case 11:
     if ((date > 30) || (date <= 0))
      output = -2;
     else
      output = ((date+2*month+3*(month+1)/5+year+year/4-year/100+year/400)%7)+1;
     break;

   case 2:
     if ((( year % 400 == 0) ||
       (year % 4 == 0 && ( year % 100 != 0))) && (date <= 29) && (date > 0) )
       output = ((date+2*month+3*(month+1)/5+year+year/4-year/100+year/400)%7)+1;
     else if ((( year % 400 != 0) ||
       (year % 4 != 0 && ( year % 100 == 0))) && (date <= 28) && (date > 0) )
       output = ((date+2*month+3*(month+1)/5+year+year/4-year/100+year/400)%7)+1;
     else
       output = -2;
      break ;
   default :
     output = -1;
     break;
  
   }
 printf ("%d ", output);
 }
} 

正解
#include <stdio.h>

int main ()
{
   int y, d;
   int n;
   int month, day;
   int leap_year;
   int days;

   scanf ( "%d%d", &y, &d );
   scanf ( "%d", &n );

   // leap year or not
   leap_year = y % 400 == 0 || ( y % 100 && y % 4 == 0 );

   // calculate each input line
   for ( int i = 0; i < n; i++ ) {
      if ( i ) printf ( " " );

      days = d;
      scanf ( "%d%d", &month, &day );

      if ( month < 1 || month > 12 ) {
         printf ( "-1" );
         continue;
      }
      if ( day < 1 ) {
         printf ( "-2" );
         continue;
      }
      else {
         switch ( month ) {
            case 2:
               if ( ( leap_year && day > 29 ) ||
                    ( !leap_year && day > 28 ) ) {
                  printf ( "-2" );
                  continue;
               }
               break;
            case 4: case 6: case 9: case 11:
               if ( day > 30 ) {
                  printf ( "-2" );
                  continue;
               }
               break;
            default:
               if ( day > 31 ) {
                  printf ( "-2" );
                  continue;
               }
         }
      }

      for ( int m = 1; m < month; m++ ) {
         switch ( m ) {
            case 2:
               if ( leap_year ) days += 29;
               else days += 28;
               break;
            case 4: case 6: case 9: case 11:
               days += 30;
               break;
            default:
               days += 31;
         }
      }

      days += ( day - 1 );
      printf ( "%d", days % 7 );
   }

   return 0;
}

三、寫一個程式來玩賓果。一個賓果盤面共有 m 欄及 m 列；每個格子中都會有一個 1 至 m * m 間不重複的數字。遊戲過程中，1 至 m * m 間的數字會隨機被喊到。若一個玩家在他賓果盤面中任何一欄、一列、一斜對角中的所有數字都被喊過，該玩家就贏了該場遊戲。現在給定 n 個玩家以及他們的賓果盤面，計算誰贏了遊戲。
(n 是一個正整數且不大於 10。m 是一個正整數且不大於 256。)
輸入格式
第一行包含數字 n 及 m。接下來 m 行為編號 0 號玩家的賓果盤面，每行皆有 m 組數字。接下來的 m 行為編號 1 號玩家的賓果盤面，以此類推。最後一行將會有 m * m 個數字，代表賓果遊戲進行中數字被喊到的順序。
輸出格式 
輸出哪個喊到的數字讓玩家獲勝，並輸出獲勝的玩家編號。若有多名玩家同時獲勝，從小至大輸出所有獲勝玩家的編號。

印出兩個矩陣
#include <stdio.h>
int main ()
{
 int m;
 scanf ("%d", &m);
 int A[m][m] , B[m][m];
 int i, j;
 for (i = 0; i < m; i++)
  for (j = 0; j < m; j++)
   scanf ("%d", &(A[i][j]));
 for (i = 0; i < m; i++){
  for (j = 0; j < m; j++)
   printf ("%4d ", A[i][j]);
  printf ("\n");
 }
 
 for (i = 0; i < m; i++)
  for (j = 0; j < m; j++)
   scanf ("%d", &(B[i][j]));
 for (i = 0; i < m; i++){
  for (j = 0; j < m; j++)
   printf ("%4d ", A[i][j]);
  printf ("\n");
 }
}


-----------
Steps:
1.每個人的數字盤
#include <stdio.h>
 
int main(void) 
{
 int n, m;
 scanf ("%d %d", &n, &m);
 int a[n][m][m];
 int num, i, j;
 for (num = 0; num < n; num++){
  for (i = 0; i < m; i++){
   for (j = 0; j < m; j++)
    scanf ("%d", &(a[num][i][j]));
  }
 }
 for (num = 0; num < n; num++){
  for (i = 0; i < m; i++){
   for (j = 0; j < m; j++)
    printf ("%4d ", (a[num][i][j]));
   printf ("\n");
  }
 }
}

---
2.輸入點到的數字
int main ()
{
 int max= m*m;
 int i, k[max];
 for ( i = 0 ; i < max ; i ++ )
   scanf ("%d", &k[i]);
 for (i = 0 ; i < max ; i ++){
   printf ("%d ", k[i]);
 }
}
------
3.把被點到的數字變成0 [以下是算連成幾條線]

 for ( int i = 0 ; i < max ; i ++ ){
    for ( int j = 0 ; j < max ; j ++ ) {
       if (k[i] == a[num][i][j]) 
           a[num][i][j] = 0 ;
    }
 }
 
     
-------
match
橫
   int s = 0 , line = 0;
   for ( num = 0; num < max; num++ ){
    for ( i = 0 ; i < max ; i ++ ){
      for ( j = 0 ; j < max ; j ++ ){
         s += a[num][i][j] ;
      }
      if ( s == 0 )
         line += 1 ;
      s = 0 ;
    }
   }
-----
綜合
   for ( num = 0; num < max; num++ ){
     for ( j = 0 ; j < max ; j ++ ){
      for ( i = 0 ; i < max ; i ++ ){
         s += a[num][i][j] ;
      }
      if ( s == 0 )
         line += 1 ;
      s = 0 ;
    }
   }
----
斜

------
獲勝者
---------

  

